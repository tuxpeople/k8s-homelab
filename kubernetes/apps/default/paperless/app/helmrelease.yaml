---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: paperless-gotenberg
    - name: paperless-tika
  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.3.3
            env:
              PAPERLESS_SECRET_KEY:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_SECRET_KEY
              PAPERLESS_URL: https://${SECRET_PAPERLESS_URL}
              PAPERLESS_PORT: "8080"
              PAPERLESS_TIME_ZONE: ${TIMEZONE}
              PAPERLESS_WEBSERVER_WORKERS: "1"
              PAPERLESS_TASK_WORKERS: "1"
              PAPERLESS_TIKA_ENABLED: "1"
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://paperless-gotenberg:3000
              PAPERLESS_TIKA_ENDPOINT: http://paperless-tika:9998
              PAPERLESS_FILENAME_FORMAT:
                "{created_year}/{correspondent}/{created_year}-{created_month}-{created_day}
                {title}"
              # Configure Remote User auth
              PAPERLESS_ENABLE_HTTP_REMOTE_USER: "true"
              # Configure folders
              PAPERLESS_CONSUMPTION_DIR: /nfs/consume
              PAPERLESS_DATA_DIR: /nfs/data
              PAPERLESS_EXPORT_DIR: /nfs/export
              PAPERLESS_MEDIA_ROOT: /nfs/media
              # Configure folder importer
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              # Configure OCR
              PAPERLESS_OCR_LANGUAGES: deu eng
              PAPERLESS_OCR_LANGUAGE: deu+eng
              PAPERLESS_OCR_MODE: skip
              PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}'
              #PAPERLESS_OCR_SKIP_ARCHIVE_FILE: with_text
              # Configure redis integration
              PAPERLESS_REDIS: redis://paperless-redis:6379
              # Configure admin user
              PAPERLESS_ADMIN_USER:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_ADMIN_USER
              PAPERLESS_ADMIN_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret
                    key: PAPERLESS_ADMIN_PASSWORD
            resources:
              requests:
                cpu: 500m
                memory: 700M
              limits:
                memory: 2000M
    service:
      main:
        ports:
          http:
            port: 8080
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          hajimari.io/icon: material-symbols:scanner-outline
          traefik.ingress.kubernetes.io/router.middlewares: networking-forwardauth-authelia@kubernetescrd
        hosts:
          - host: &host "${SECRET_PAPERLESS_URL}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN/./-}-production-tls
    persistence:
      nfs:
        type: nfs
        server: 10.20.30.40
        path: /volume2/scanner
