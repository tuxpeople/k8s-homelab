---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: code-server
  namespace: default
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.3.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        replicas: 1
        strategy: Recreate
        containers:
          main:
            image:
              repository: ghcr.io/linuxserver/code-server
              tag: 4.19.0
            env:
              TZ: ${TIMEZONE}
              PUID: 911
              PGID: 911
              PROXY_DOMAIN: code.${SECRET_DOMAIN}
              PASSWORD: ${CODESERVER_PASSWORD}
              DOCKER_MODS: linuxserver/mods:universal-git|linuxserver/mods:code-server-shellcheck|linuxserver/mods:code-server-terraform
              DEFAULT_WORKSPACE: /config/workspace
              # DOCKER_MODS: "linuxserver/mods:code-server-docker|linuxserver/mods:code-server-python3|linuxserver/mods:code-server-shellcheck|linuxserver/mods:code-server-terraform|linuxserver/mods:universal-git|linuxserver/mods:universal-tshoot|linuxserver/mods:universal-package-install"
              # INSTALL_PACKAGES: "rsync|git|nginx"
              # INSTALL_PIP_PACKAGES: "apprise"
    service:
      main:
        ports:
          http:
            port: &port 8443
    ingress:
      main:
        enabled: true
        ingressClassName: traefik
        annotations:
          kubernetes.io/ingress.class: traefik
          # external-dns/is-public: "true"
          # external-dns.alpha.kubernetes.io/target: ${SECRET_DNS_TARGET}
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN/./-}-production-tls
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 5Gi
        storageClass: local-path
        globalMounts:
          - path: /config
# docker run --entrypoint /bin/sleep docker.io/fluxcd/flux-cli:v0.37.0 inf
