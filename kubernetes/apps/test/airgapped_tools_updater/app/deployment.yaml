---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: packages-storage
  namespace: test
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: airgapped-tools-server
  namespace: test
  labels:
    app: airgapped-tools-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: airgapped-tools-server
  template:
    metadata:
      labels:
        app: airgapped-tools-server
    spec:
      imagePullSecrets:
        - name: airgapped-tools-updater-pullsecret
      initContainers:
        # 1. Git Sync Pull - Download current config from GitLab
        - name: git-sync-pull
          image: registry.k8s.io/git-sync/git-sync:v4.2.3
          command: ["/bin/sh"]
          args:
            - -c
            - |
              set -e
              echo "Syncing GitLab repository..."
              /git-sync --repo=$(GITSYNC_REPO) --ref=$(GITSYNC_REF) --root=/tmp/git --link=$(GITSYNC_LINK) --one-time --verbose=2
              echo "Copying config to app directory..."
              mkdir -p /app/config
              cp /tmp/git/repo/config/tools_config.json /app/config/
              echo "Git sync pull completed"
          env:
            - name: GITSYNC_REPO
              valueFrom:
                configMapKeyRef:
                  name: git-sync-config
                  key: GIT_SYNC_REPO
            - name: GITSYNC_REF
              valueFrom:
                configMapKeyRef:
                  name: git-sync-config
                  key: GIT_SYNC_BRANCH
            - name: GITSYNC_LINK
              valueFrom:
                configMapKeyRef:
                  name: git-sync-config
                  key: GIT_SYNC_DEST
            - name: GITSYNC_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: git-sync-config
                  key: GIT_SYNC_USERNAME
            - name: GITSYNC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gitlab-credentials
                  key: gitlab-token
          volumeMounts:
            - name: git-sync-volume
              mountPath: /tmp/git
            - name: app-config
              mountPath: /app/config

        # 2. Tools Updater - Download packages and update config
        - name: tools-updater
          image: registry.gitlab.com/umb.tdeutsch/airgapped_tools_updater:v4.2.1
          command: ["python", "src/airgapped_tools_updater.py", "--package"]
          env:
            # GitHub Token f√ºr API-Calls zu GitHub Releases
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: github-token
                  key: github-token
            - name: PYTHONUNBUFFERED
              value: "1"
          volumeMounts:
            - name: app-config
              mountPath: /app/config
            - name: packages-volume
              mountPath: /app/packages
            - name: downloads-volume
              mountPath: /app/downloads

        # 3. Git Sync Push - Commit updated config back to GitLab
        - name: git-sync-push
          image: registry.k8s.io/git-sync/git-sync:v4.2.3
          command: ["/bin/sh"]
          args:
            - -c
            - |
              set -e
              echo "Setting up Git credentials..."
              cd /tmp/git/repo
              git config user.name "Airgapped Tools Updater"
              git config user.email "tools-updater@kubernetes.local"

              echo "Copying updated config..."
              cp /app/config/tools_config.json ./config/tools_config.json

              echo "Checking for changes..."
              if git diff --quiet; then
                echo "No changes to commit"
                exit 0
              fi

              echo "Committing changes..."
              git add config/tools_config.json
              git commit -m "Auto-update tool versions - $(date '+%Y-%m-%d %H:%M:%S')"

              echo "Pushing to GitLab..."
              git push https://${GIT_SYNC_USERNAME}:${GITLAB_TOKEN}@$(echo ${GIT_SYNC_REPO} | sed 's|https://||') ${GIT_SYNC_BRANCH}

              echo "Git sync push completed successfully"
          env:
            - name: GIT_SYNC_REPO
              valueFrom:
                configMapKeyRef:
                  name: git-sync-config
                  key: GIT_SYNC_REPO
            - name: GIT_SYNC_BRANCH
              valueFrom:
                configMapKeyRef:
                  name: git-sync-config
                  key: GIT_SYNC_BRANCH
            - name: GIT_SYNC_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: git-sync-config
                  key: GIT_SYNC_USERNAME
            - name: GITLAB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: gitlab-credentials
                  key: gitlab-token
          volumeMounts:
            - name: git-sync-volume
              mountPath: /tmp/git
            - name: app-config
              mountPath: /app/config

      containers:
        # 4. HTTP Server - Serve packages for download
        - name: package-server
          image: python:3.14-slim
          command: ["python", "-m", "http.server"]
          args: ["8080"]
          workingDir: /packages
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: packages-volume
              mountPath: /packages
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "128Mi"
              cpu: "100m"

      volumes:
        - name: git-sync-volume
          emptyDir: {}
        - name: app-config
          emptyDir: {}
        - name: packages-volume
          persistentVolumeClaim:
            claimName: packages-storage
        - name: downloads-volume
          emptyDir:
            sizeLimit: 5Gi

      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: airgapped-tools-server
  namespace: test
  labels:
    app: airgapped-tools-server
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app: airgapped-tools-server

---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: airgapped-tools-updater
  namespace: test
spec:
  schedule: "0 2 * * *" # Daily at 2 AM
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: airgapped-tools-updater
          containers:
            - name: restart-deployment
              image: bitnami/kubectl:latest
              command:
                - /bin/sh
                - -c
                - |
                  echo "Triggering airgapped-tools-server restart for updates..."
                  kubectl rollout restart deployment/airgapped-tools-server -n test
                  echo "Restart triggered successfully"
          restartPolicy: OnFailure
      successfulJobsHistoryLimit: 3
      failedJobsHistoryLimit: 1
