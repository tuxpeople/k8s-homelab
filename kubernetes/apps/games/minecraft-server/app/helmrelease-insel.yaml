---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app minecraft-server-insel
spec:
  interval: 15m
  timeout: 15m
  chart:
    spec:
      chart: minecraft-bedrock
      version: 2.4.0
      sourceRef:
        kind: HelmRepository
        name: minecraft-server-charts
        namespace: flux-system
  maxHistory: 2
  install:
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    persistence:
      storageClass: longhorn
      dataDir:
        enabled: true
        Size: 5Gi
    resources:
      requests:
        cpu: 750m
        memory: 750Mi
      limits:
        memory: 3Gi
    livenessProbe:
      initialDelaySeconds: 30
      periodSeconds: 5
      failureThreshold: 10
    readinessProbe:
      initialDelaySeconds: 30
      periodSeconds: 5
      failureThreshold: 10
    startupProbe:
      enabled: true
      failureThreshold: 30
      periodSeconds: 10
    extraEnv:
      ENABLE_AUTOPAUSE: false
      BACKUP_NAME: *app
      TZ: ${TIMEZONE}
      ENABLE_SSH: "TRUE"
    podAnnotations:
      configmap.reloader.stakater.com/reload: mc-backup-configmap
    minecraftServer:
      eula: "TRUE"
      version: LATEST
      enableLanVisibility: false
      levelSeed: "-1671764914"
      serviceType: LoadBalancer
      loadBalancerIP: ${METALLB_MINECRAFT4_ADDR}
      externalTrafficPolicy: Local
      onlineMode: false
      gameMode: creative
      # The world is ticked this many chunks away from any player.
      tickDistance: 8
      # Max view distance (in chunks).
      viewDistance: 10
      difficulty: peaceful
      icon: https://www.freeiconspng.com/uploads/minecraft-server-icon-13.png
      serverName: Thomas' Insel Server
      levelName: insel
      # memory: 2048M
    rcon:
      enabled: false
    extraVolumes:
      - volumeMounts:
          # - name: nfs
          #   mountPath: /backup/minecraft_backup
        #       - name: mc-backup-volume
        #         mountPath: /scripts/mc-backup.sh
        #         subPath: mc-backup.sh
        #         defaultMode: 0744
        #         readOnly: true
        volumes:
          - name: nfs
            nfs:
              server: 10.20.30.40
              path: /volume2/data/backup/kubernetes/mc-backup
        # - name: mc-backup-volume
        #   configMap:
        #     name: mc-backup-configmap
    # extraDeploy:
    #   - |
    #     apiVersion: batch/v1
    #     kind: CronJob
    #     metadata:
    #       name: {{ template "minecraft.fullname" . }}-backup
    #       annotations:
    #         kustomize.toolkit.fluxcd.io/substitute: disabled
    #     spec:
    #       schedule: "@hourly"
    #       concurrencyPolicy: Forbid
    #       successfulJobsHistoryLimit: 3
    #       failedJobsHistoryLimit: 3
    #       jobTemplate:
    #         spec:
    #           activeDeadlineSeconds: 180
    #           template:
    #             spec:
    #               serviceAccountName: backup-sa
    #               containers:
    #                 - name: backup
    #                   image: registry.eighty-three.me/tuxpeople/kubernetes-kubectl:1.29.2
    #                   command:
    #                     - /bin/bash
    #                   args:
    #                     - -c
    #                     - |
    #                       kubectl exec svc/{{ template "minecraft.fullname" . }} -- /usr/bin/bash -c "bash /scripts/mc-backup.sh"
    #                       echo "Convert backups to .mcworld files"
    #                       BASEDIR="/backup/minecraft_backup"
    #                       cd $BASEDIR
    #                       for ARCHIVE in $(find . -type f -name *.tar.gz); do
    #                           MYDIR=$(dirname $ARCHIVE)
    #                           MYNAME=$(basename $ARCHIVE .tar.gz)
    #                           cd $MYDIR
    #                           tar xzf $MYNAME.tar.gz && zip $MYNAME.mcworld $(tar tf $MYNAME.tar.gz | grep -v '\./$') && rm -rf -- $(tar tf $MYNAME.tar.gz | grep -v '\./$')
    #                           touch -r $MYNAME.tar.gz $MYNAME.mcworld
    #                           rm -f $MYNAME.tar.gz
    #                           stat --format="Created mcworld file: '%n', size: %s bytes" "$MYNAME.mcworld"
    #                           cd $BASEDIR
    #                       done
    #                   volumeMounts:
    #                     - name: nfs
    #                       mountPath: /backup/minecraft_backup
    #               restartPolicy: OnFailure
    #               volumes:
    #                 - name: nfs
    #                   nfs:
    #                     server: 10.20.30.40
    #                     path: /volume2/data/backup/kubernetes/minecraft_backup
  # postRenderers:
  #   # Instruct helm-controller to use built-in "kustomize" post renderer.
  #   - kustomize:
  #       patchesJson6902:
  #         - patch:
  #             - op: add
  #               path: /spec/template/spec/containers/-
  #               value:
  #                 image: kaiede/minecraft-bedrock-backup:latest
  #                 imagePullPolicy: IfNotPresent
  #                 name: backup
  #                 resources: {}
  #                 env:
  #                   - name: TZ
  #                     value: ${TIMEZONE}
  #                 volumeMounts:
  #                   - mountPath: /data
  #                     name: datadir
  #                   - mountPath: /backups
  #                     name: nfs
  #           target:
  #             kind: Deployment
  #             name: minecraft-server-insel-minecraft-bedrock
