---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
  annotations:
    external-dns.alpha.kubernetes.io/target: "external.${SECRET_DOMAIN}"
    nginx.ingress.kubernetes.io/auth-method: GET
    nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/api/verify
    nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
    nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
    nginx.ingress.kubernetes.io/auth-snippet: |
      proxy_set_header X-Forwarded-Method $request_method;
      proxy_set_header X-Forwarded-Scheme $scheme;
    hajimari.io/enable: "true"
    hajimari.io/icon: television-box
spec:
  ingressClassName: external
  tls:
    - secretName: ${SECRET_DOMAIN/./-}-production-tls
      hosts:
        - sonarr.${SECRET_DOMAIN}
  rules:
    - host: sonarr.${SECRET_DOMAIN}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mediabox
                port:
                  name: sonarr
---
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: sonarr
    gatus.io/enabled: "true"
  name: sonarr-gatus-ep
apiVersion: v1
data:
  config.yaml: |
    endpoints:
      - name: "sonarr"
        group: external-kubernetes
        url: "https://sonarr.${SECRET_DOMAIN}/"
        interval: 1m
        client:
          dns-resolver: tcp://1.1.1.1:53
        conditions:
          - "[STATUS] == 200"
        alerts:
          - type: discord
