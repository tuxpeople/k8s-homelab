# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-3.7.3/charts/other/app-template/values.schema.json

controllers:
  app:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      main:
        image:
          repository: ghcr.io/n8n-io/n8n
          tag: 1.107.2
        env:
          DB_SQLITE_VACUUM_ON_STARTUP: true
          EXECUTIONS_DATA_PRUNE: true
          EXECUTIONS_DATA_MAX_AGE: 7
          EXECUTIONS_DATA_PRUNE_MAX_COUNT: 10000
          GENERIC_TIMEZONE: Europe/Zurich
          N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: false
          N8N_PROTOCOL: "https"
          N8N_PORT: &port 8080
          N8N_HOST: &host "n8n.${SECRET_DOMAIN}"
          N8N_LOG_LEVEL: info
          N8N_LOG_OUTPUT: console
          N8N_RUNNERS_ENABLED: false
          N8N_EXPRESS_TRUST_PROXY: true
          N8N_ENCRYPTION_KEY:
            valueFrom:
              secretKeyRef:
                name: n8n-secret
                key: N8N_ENCRYPTION_KEY
          N8N_WEBHOOK_URL: "https://n8n.${SECRET_DOMAIN}"
          N8N_PERSONALIZATION_ENABLED: false
          N8N_VERSION_NOTIFICATIONS_ENABLED: false
          N8N_DIAGNOSTICS_ENABLED: false
          N8N_COMMUNITY_PACKAGES_ENABLED: true
          N8N_COMMUNITY_PACKAGES_ALLOW_TOOL_USAGE: true
          N8N_METRICS: true
          N8N_PAYLOAD_SIZE_MAX: "32mb"
        probes:
          liveness:
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /healthz
                port: 8080
              initialDelaySeconds: 20
              periodSeconds: 10
              timeoutSeconds: 2
              failureThreshold: 3
          readiness:
            enabled: true
            custom: true
            spec:
              httpGet:
                path: /healthz
                port: 8080
              initialDelaySeconds: 5
              periodSeconds: 10
              timeoutSeconds: 2
              failureThreshold: 3
        resources:
          requests:
            cpu: 50m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 512Mi

serviceMonitor:
  app:
    serviceName: app
    endpoints:
      - port: http
        scheme: http
        path: /metrics
        interval: 1m
        scrapeTimeout: 10s

defaultPodOptions:
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: "OnRootMismatch"

service:
  app:
    controller: app
    ports:
      http:
        port: *port

ingress:
  app:
    enabled: true
    className: internal
    annotations:
      hajimari.io/icon: file-arrow-up-down-outline
      nginx.ingress.kubernetes.io/proxy-body-size: 32m
    hosts:
      - host: *host
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: *port
    tls:
      - hosts:
          - *host
        secretName: ${SECRET_DOMAIN/./-}-production-tls

persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 5Gi
    globalMounts:
      - path: /home/node/.n8n
        readOnly: false
