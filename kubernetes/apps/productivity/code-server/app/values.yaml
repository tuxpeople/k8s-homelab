# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-3.7.3/charts/other/app-template/values.schema.json

controllers:
  app:
    annotations:
      reloader.stakater.com/auto: "true"
    replicas: 1
    strategy: Recreate
    containers:
      main:
        image:
          repository: ghcr.io/linuxserver/code-server
          tag: 4.105.1@sha256:c7c66416238b70312df90b5936ea4adb6108552d866dd00a804c86c599b2ab6c
        env:
          TZ: ${TIMEZONE}
          PUID: 911
          PGID: 911
          PROXY_DOMAIN: code.${SECRET_DOMAIN}
          PASSWORD: ${CODESERVER_PASSWORD}
          DOCKER_MODS: >-
            linuxserver/mods:universal-git|linuxserver/mods:code-server-shellcheck|
            linuxserver/mods:code-server-terraform|linuxserver/mods:code-server-extension-arguments|
            linuxserver/mods:universal-package-install
          DEFAULT_WORKSPACE: /config/workspace
          EXTENSIONS_GALLERY: >-
            {"serviceUrl": "https://marketplace.visualstudio.com/_apis/public/gallery",
            "cacheUrl": "https://vscode.blob.core.windows.net/gallery/index",
            "itemUrl": "https://marketplace.visualstudio.com/items",
            "controlUrl": "","recommendationsUrl": ""}
          VSCODE_EXTENSION_IDS: >-
            1Password.op-vscode|4ops.terraform|albert.tabout|britesnow.vscode-toggle-quotes|
            codezombiech.gitignore|davidanson.vscode-markdownlint|dhoeric.ansible-vault|
            donjayamanne.githistory|eamodio.gitlens|editorconfig.editorconfig|
            esbenp.prettier-vscode|exiasr.hadolint|fcrespo82.markdown-table-formatter|
            foxundermoon.shell-format|github.vscode-github-actions|github.vscode-pull-request-github|
            gitlab.gitlab-workflow|golang.go|hashicorp.terraform|joaompinto.vscode-graphviz|
            kennylong.kubernetes-yaml-formatter|lunuan.kubernetes-templates|
            mgtrrz.terraform-completer|mitchdenny.ecdc|mohamedfaizal.tf-az-codesnippet|
            mohsen1.prettify-json|ms-azuretools.vscode-azureresourcegroups|
            ms-azuretools.vscode-azureterraform|ms-azuretools.vscode-docker|
            ms-kubernetes-tools.vscode-kubernetes-tools|ms-python.debugpy|ms-python.isort|
            ms-python.python|ms-python.vscode-pylance|ms-vscode-remote.remote-containers|
            ms-vscode-remote.remote-ssh|ms-vscode-remote.remote-ssh-edit|
            ms-vscode.azure-account|ms-vscode.azurecli|ms-vscode.cpptools|ms-vscode.hexeditor|
            ms-vscode.remote-explorer|oderwat.indent-rainbow|
            pjmiravalle.terraform-advanced-syntax-highlighting|platformio.platformio-ide|
            psykosoldi3r.vscode-git-flow|redhat.ansible|redhat.vscode-commons|
            redhat.vscode-xml|redhat.vscode-yaml|run-at-scale.terraform-doc-snippets|
            samuelcolvin.jinjahtml|signageos.signageos-vscode-sops|tfsec.tfsec|
            usernamehw.errorlens|vscode-icons-team.vscode-icons|will-stone.in-any-case|
            yzdann.k8s-snippets|yzhang.markdown-all-in-one
          INSTALL_PACKAGES: "bash-completion"
          # Alternative DOCKER_MODS configuration:
          # DOCKER_MODS: >-
          #   linuxserver/mods:code-server-docker|linuxserver/mods:code-server-python3|
          #   linuxserver/mods:code-server-shellcheck|linuxserver/mods:code-server-terraform|
          #   linuxserver/mods:universal-git|linuxserver/mods:universal-tshoot|
          #   linuxserver/mods:universal-package-install
          # INSTALL_PACKAGES: "rsync|git|nginx"
          # INSTALL_PIP_PACKAGES: "apprise"
          # probes:
          #   liveness:
          #     enabled: true
          #   readiness:
          #     enabled: true
          #   startup:
          #     enabled: true

service:
  app:
    controller: app
    ports:
      http:
        port: &port 8443

ingress:
  app:
    annotations:
      hajimari.io/appName: "Code Server"
      hajimari.io/icon: "vs-code"
      nginx.ingress.kubernetes.io/auth-method: GET
      nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
      nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Scheme $scheme;
    enabled: true
    className: external
    hosts:
      - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: *port
    tls:
      - hosts:
          - *host
        secretName: ${SECRET_DOMAIN/./-}-production-tls

persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 5Gi
    globalMounts:
      - path: /config
  custom-cont-init:
    type: configMap
    name: custom-cont-init
    globalMounts:
      - path: /custom-cont-init.d
  extensions:
    type: emptyDir
    globalMounts:
      - path: /config/extensions
  cache:
    type: emptyDir
    globalMounts:
      - path: /config/.cache
