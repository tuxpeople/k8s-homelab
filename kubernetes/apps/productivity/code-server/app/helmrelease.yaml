---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: code-server
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        replicas: 1
        strategy: Recreate
        containers:
          main:
            image:
              repository: ghcr.io/linuxserver/code-server
              tag: 4.96.2
            env:
              TZ: ${TIMEZONE}
              PUID: 911
              PGID: 911
              PROXY_DOMAIN: code.${SECRET_DOMAIN}
              PASSWORD: ${CODESERVER_PASSWORD}
              DOCKER_MODS: linuxserver/mods:universal-git|linuxserver/mods:code-server-shellcheck|linuxserver/mods:code-server-terraform
              DEFAULT_WORKSPACE: /config/workspace
              EXTENSIONS_GALLERY: '{"serviceUrl": "https://marketplace.visualstudio.com/_apis/public/gallery","cacheUrl": "https://vscode.blob.core.windows.net/gallery/index","itemUrl": "https://marketplace.visualstudio.com/items","controlUrl": "","recommendationsUrl": ""}'

              # DOCKER_MODS: "linuxserver/mods:code-server-docker|linuxserver/mods:code-server-python3|linuxserver/mods:code-server-shellcheck|linuxserver/mods:code-server-terraform|linuxserver/mods:universal-git|linuxserver/mods:universal-tshoot|linuxserver/mods:universal-package-install"
              # INSTALL_PACKAGES: "rsync|git|nginx"
              # INSTALL_PIP_PACKAGES: "apprise"
            # probes:
            #   liveness:
            #     enabled: true
            #   readiness:
            #     enabled: true
            #   startup:
            #     enabled: true
    service:
      app:
        controller: app
        ports:
          http:
            port: &port 8443
    ingress:
      app:
        enabled: true
        className: external
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: *port
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN/./-}-production-tls
    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 5Gi
        globalMounts:
          - path: /config
      custom-cont-init:
        type: configMap
        name: custom-cont-init
        globalMounts:
          - path: /custom-cont-init.d
      extensions:
        type: emptyDir
        globalMounts:
          - path: /config/extensions
