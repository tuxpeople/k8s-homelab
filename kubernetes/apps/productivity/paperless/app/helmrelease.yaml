---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      app:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          main:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.17.1
            envFrom:
              - configMapRef:
                  name: paperless-config
            env:
              PAPERLESS_SECRET_KEY:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret-values
                    key: PAPERLESS_SECRET_KEY
              PAPERLESS_URL: https://{{ .Release.Name }}.${SECRET_DOMAIN}
              PAPERLESS_PORT: "8080"
              PAPERLESS_TIME_ZONE: ${TIMEZONE}
              # Configure admin user
              PAPERLESS_ADMIN_USER:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret-values
                    key: PAPERLESS_ADMIN_USER
              PAPERLESS_ADMIN_PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: paperless-secret-values
                    key: PAPERLESS_ADMIN_PASSWORD
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 500m
                memory: 1181Mi
              limits:
                cpu: 2000m
                memory: 1880Mi

      redis:
        containers:
          redis:
            image:
              repository: mirror.gcr.io/valkey/valkey
              tag: 8.1.2
            resources:
              requests:
                cpu: 23m
                memory: 100Mi
              limits:
                cpu: 150m
                memory: 120Mi

      tika:
        containers:
          tika:
            image:
              repository: ghcr.io/paperless-ngx/tika
              tag: 2.9.1-full
            resources:
              requests:
                cpu: 15m
                memory: 308Mi
              limits:
                cpu: 500m
                memory: 500Mi

      gotenberg:
        containers:
          gotenberg:
            image:
              repository: mirror.gcr.io/gotenberg/gotenberg
              tag: 8.21.1
            env:
              DISABLE_GOOGLE_CHROME: "1"
            resources:
              requests:
                cpu: 15m
                memory: 334Mi
              limits:
                cpu: 500m
                memory: 503Mi

    service:
      app:
        primary: true
        controller: app
        ports:
          http:
            port: &port 8080
      redis:
        controller: redis
        ports:
          http:
            port: 6379
      tika:
        controller: tika
        ports:
          http:
            port: 9998
      gotenberg:
        controller: gotenberg
        ports:
          http:
            port: 3000

    ingress:
      app:
        enabled: true
        className: internal
        annotations:
          hajimari.io/icon: material-symbols:scanner-outline
          nginx.ingress.kubernetes.io/auth-method: GET
          nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/api/verify
          nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
          nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
          nginx.ingress.kubernetes.io/auth-snippet: |
            proxy_set_header X-Forwarded-Method $request_method;
            proxy_set_header X-Forwarded-Scheme $scheme;
        hosts:
          - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host
            secretName: ${SECRET_DOMAIN/./-}-production-tls
      public:
        enabled: true
        className: external
        annotations:
          gatus.io/enabled: "false"
          hajimari.io/enable: "false"
        hosts:
          - host: &host2 "documents.${SECRET_CH_DOMAIN}"
            paths:
              - path: /share
                pathType: Prefix
                service:
                  identifier: app
                  port: http
        tls:
          - hosts:
              - *host2
            secretName: ${SECRET_CH_DOMAIN/./-}-production-tls
    persistence:
      nfs:
        type: nfs
        server: 10.20.30.40
        path: /volume2/scanner
      scripts:
        type: configMap
        name: paperless-scripts
        defaultMode: 0775
        globalMounts:
          - path: /usr/src/paperless/scripts
      passwords:
        type: secret
        name: paperless-passwords
        globalMounts:
          - path: /usr/src/paperless/passwords/passwords.txt
            subPath: passwords.txt
            readOnly: true
          # - path: /usr/src/paperless/scripts/pre-consume.sh
          #   subPath: pre-consume.sh
          # - path: /usr/src/paperless/scripts/remove-blank-pages.sh
          #   subPath: remove-blank-pages.sh
