# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-3.7.3/charts/other/app-template/values.schema.json

controllers:
  paperless-ai:
    annotations:
      reloader.stakater.com/auto: "true"
    containers:
      app:
        image:
          repository: docker.io/clusterzx/paperless-ai
          tag: 3.0.7
        env:
          PAPERLESS_API_URL: http://paperless.productivity.svc.cluster.local:8080/api
          AI_PROVIDER: ollama
          SCAN_INTERVAL: "*/30 * * * *"
          PROCESS_PREDEFINED_DOCUMENTS: yes
          ADD_AI_PROCESSED_TAG: yes
          AI_PROCESSED_TAG_NAME: ai-processed
          USE_PROMPT_TAGS: no
          OLLAMA_API_URL: http://ollama:11434
          OLLAMA_MODEL: llama3.2:3b
        envFrom:
          - secretRef:
              name: paperless-ai
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 700m
            memory: 2Gi
defaultPodOptions:
  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    fsGroupChangePolicy: OnRootMismatch
    seccompProfile: { type: RuntimeDefault }
    # affinity:
    #   # Image not yet built for arm64
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #         - matchExpressions:
    #             - key: kubernetes.io/arch
    #               operator: In
    #               values:
    #                 - amd64
service:
  app:
    controller: paperless-ai
    ports:
      http:
        port: &port 3000
ingress:
  app:
    enabled: true
    className: internal
    annotations:
      hajimari.io/icon: material-symbols:scanner-outline
      nginx.ingress.kubernetes.io/auth-method: GET
      nginx.ingress.kubernetes.io/auth-url: https://auth.${SECRET_DOMAIN}/api/verify
      nginx.ingress.kubernetes.io/auth-signin: https://auth.${SECRET_DOMAIN}?rm=$request_method
      nginx.ingress.kubernetes.io/auth-response-headers: Remote-User,Remote-Name,Remote-Groups,Remote-Email
      nginx.ingress.kubernetes.io/auth-snippet: |
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Scheme $scheme;
    hosts:
      - host: &host "{{ .Release.Name }}.${SECRET_DOMAIN}"
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: app
              port: *port
    tls:
      - hosts:
          - *host
        secretName: ${SECRET_DOMAIN/./-}-production-tls
persistence:
  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 50Gi
    globalMounts:
      - path: /app/data
  logs:
    type: emptyDir
    globalMounts:
      - path: /app/logs
  public:
    type: emptyDir
    globalMounts:
      - path: /app/public/images
  tmp:
    type: emptyDir
    globalMounts:
      - path: /tmp
