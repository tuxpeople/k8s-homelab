---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app family-server
spec:
  interval: 15m
  timeout: 15m
  chart:
    spec:
      chart: minecraft-bedrock
      version: 2.8.0
      sourceRef:
        kind: HelmRepository
        name: minecraft-server-charts
        namespace: flux-system
  maxHistory: 2
  install:
    crds: CreateReplace
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    persistence:
      storageClass: csi-nfs
      dataDir:
        enabled: true
        Size: 5Gi
    resources:
      requests:
        cpu: 750m
        memory: 750Mi
      limits:
        memory: 3Gi
    livenessProbe:
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 5
      failureThreshold: 10
    readinessProbe:
      enabled: true
      initialDelaySeconds: 120
      periodSeconds: 5
      failureThreshold: 10
    startupProbe:
      enabled: true
      failureThreshold: 120
      periodSeconds: 10
      initialDelaySeconds: 120
    extraEnv:
      ENABLE_AUTOPAUSE: false
      BACKUP_NAME: *app
      TZ: ${TIMEZONE}
    podAnnotations:
      configmap.reloader.stakater.com/reload: mc-backup-configmap
    minecraftServer:
      eula: "TRUE"
      version: LATEST
      enableLanVisibility: false
      serviceType: LoadBalancer
      loadBalancerIP: ${CILIUM_LB_MINECRAFT3_ADDR}
      externalTrafficPolicy: Cluster
      gameMode: survival
      icon: https://www.freeiconspng.com/uploads/minecraft-server-icon-13.png
      serverName: Thomas' Family Server
      levelName: *app
      # memory: 2048M
    rcon:
      enabled: false
    extraVolumes:
      - volumeMounts:
          - name: nfs
            mountPath: /backup/minecraft_backup
          - name: mc-backup-volume
            mountPath: /scripts/mc-backup.sh
            subPath: mc-backup.sh
            defaultMode: 0744
            readOnly: true
        volumes:
          - name: nfs
            nfs:
              server: 10.20.30.40
              path: /volume2/data/backup/kubernetes/minecraft_backup
          - name: mc-backup-volume
            configMap:
              name: mc-backup-configmap
    extraDeploy:
      - |
        apiVersion: batch/v1
        kind: CronJob
        metadata:
          name: {{ template "minecraft.fullname" . }}-backup
          annotations:
            kustomize.toolkit.fluxcd.io/substitute: disabled
        spec:
          schedule: "@hourly"
          concurrencyPolicy: Forbid
          successfulJobsHistoryLimit: 3
          failedJobsHistoryLimit: 3
          jobTemplate:
            spec:
              activeDeadlineSeconds: 60
              template:
                spec:
                  serviceAccountName: backup-sa
                  containers:
                    - name: backup
                      image: registry.eighty-three.me/tuxpeople/kubernetes-kubectl:1.29.2
                      command:
                        - /bin/bash
                      args:
                        - -c
                        - |
                          kubectl exec svc/{{ template "minecraft.fullname" . }} -- /usr/bin/bash -c "bash /scripts/mc-backup.sh"
                          echo "Convert backups to .mcworld files"
                          BASEDIR="/backup/minecraft_backup"
                          cd $BASEDIR
                          for ARCHIVE in $(find . -type f -name *.tar.gz); do
                              MYDIR=$(dirname $ARCHIVE)
                              MYNAME=$(basename $ARCHIVE .tar.gz)
                              cd $MYDIR
                              tar xzf $MYNAME.tar.gz && zip $MYNAME.mcworld $(tar tf $MYNAME.tar.gz | grep -v '\./$') && rm -rf -- $(tar tf $MYNAME.tar.gz | grep -v '\./$')
                              touch -r $MYNAME.tar.gz $MYNAME.mcworld
                              rm -f $MYNAME.tar.gz
                              stat --format="Created mcworld file: '%n', size: %s bytes" "$MYNAME.mcworld"
                              cd $BASEDIR
                          done
                      volumeMounts:
                        - name: nfs
                          mountPath: /backup/minecraft_backup
                  restartPolicy: OnFailure
                  volumes:
                    - name: nfs
                      nfs:
                        server: 10.20.30.40
                        path: /volume2/data/backup/kubernetes/minecraft_backup

  # postRenderers:
  #   # Instruct helm-controller to use built-in "kustomize" post renderer.
  #   - kustomize:
  #       patchesJson6902:
  #         - patch:
  #             - op: add
  #               path: /spec/template/spec/containers/-
  #               value:
  #                 image: itzg/mc-monitor:0.12.3
  #                 args: ["status-bedrock --host localhost"]
  #                 imagePullPolicy: IfNotPresent
  #                 name: mc-monitor
  #                 resources: {}
  #           target:
  #             kind: Deployment
  #             name: minecraft-server-family-minecraft-bedrock
