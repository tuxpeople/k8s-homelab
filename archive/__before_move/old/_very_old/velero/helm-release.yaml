---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: velero
  namespace: velero
spec:
  interval: 15m
  timeout: 10m
  chart:
    spec:
      chart: velero
      version: 2.27.0
      sourceRef:
        kind: HelmRepository
        name: vmware-tanzu
        namespace: flux-system
  releaseName: velero
  targetNamespace: velero
  test:
    enable: false # Enable helm test
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  rollback:
    timeout: 10m
    cleanupOnFail: true
    recreate: true
  values:
    credentials:
      secretContents:
        cloud: |
          [default]
          aws_access_key_id = ${SECRET_MINIO_ACCESSKEY}
          aws_secret_access_key = ${SECRET_MINIO_SECRETKEY}
    configuration:
      extraEnvVars:
        TZ: Europe/Zurich
      features: EnableCSI
      provider: aws
      backupStorageLocation:
        name: default
        bucket: velero
        config:
          region: us-east-1
          s3ForcePathStyle: true
          s3Url: http://minio.lab.tdeutsch.ch:9091
      volumeSnapshotLocation:
        name: default
        bucket: velero
      resticTimeout: 6h
    initContainers:
      - name: velero-plugin-for-aws
        image: ghcr.io/k8s-at-home/velero-plugin-for-aws:v1.3.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /target
            name: plugins
      - name: velero-plugin-for-csi
        image: velero/velero-plugin-for-csi:v0.2.0
        imagePullPolicy: IfNotPresent
        volumeMounts:
          - mountPath: /target
            name: plugins
    # schedules:
    #   daily-backup:
    #     schedule: "0 6 * * *"
    #     template:
    #       ttl: "168h"
    resources:
      requests:
        memory: 300Mi
        cpu: 25m
      limits:
        memory: 1500Mi
    # tolerations:
    # - key: "arm"
    #   operator: "Exists"
    # enableHelmHooks: false
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
    backupsEnabled: true
    snapshotsEnabled: true
    defaultVolumesToRestic: false
    upgradeCRDs: true
    cleanUpCRDs: false
    deployRestic: false
    restic:
      podVolumePath: /var/lib/kubelet/pods
      privileged: false
      tolerations:
        - key: node-role.kubernetes.io/master
          operator: Exists
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
      resources:
        requests:
          memory: 200Mi
          cpu: 15m
        limits:
          memory: 3000Mi
