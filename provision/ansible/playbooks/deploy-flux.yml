---
- name: Flux Bootstrap
  hosts: master[0]
  any_errors_fatal: true

  tasks:
    - name: Get absolute path to this Git repository
      delegate_to: localhost
      become: false
      run_once: true
      ansible.builtin.command: "git rev-parse --show-toplevel"
      register: repo_abs_path

    - name: Update kubeconfig with the right cluster name
      delegate_to: localhost
      become: false
      run_once: true
      ansible.builtin.replace:
        path: "{{ repo_abs_path.stdout }}/provision/kubeconfig"
        regexp: 'default'
        replace: "{{ cluster_name }}"

    - name: Move kubeconfig in place
      command: "mv {{ repo_abs_path.stdout }}/provision/kubeconfig {{ local_kubeconfig }}"
      delegate_to: localhost
      become: false
      run_once: true

    - name: Create flux-system namespace
      shell: "kubectl --kubeconfig={{ local_kubeconfig }} create namespace flux-system --dry-run=client -o yaml | kubectl --kubeconfig={{ local_kubeconfig }} apply -f - --force"
      delegate_to: localhost
      become: false

    - name: Deploy gpg key for SOPS
      shell: "gpg --export-secret-keys --armor {{ gpg_key }} | kubectl --kubeconfig={{ local_kubeconfig }} create secret generic sops-gpg --namespace=flux-system --from-file=sops.asc=/dev/stdin --dry-run=client -o yaml | kubectl --kubeconfig={{ local_kubeconfig }} apply -f - --force"
      delegate_to: localhost
      become: false

    - name: Flux pre-check
      shell: "flux check --pre"
      delegate_to: localhost
      become: false
      environment:
        KUBECONFIG: "{{ local_kubeconfig }}"

#      shell: "flux bootstrap github --owner={{ github_user }} --repository={{ github_repo }} --branch=master --personal=true  --private=false --path=cluster/core --private-key-file=~/.ssh/id_rsa_github"

    - name: Bootstrap Flux
      shell: "kubectl --kubeconfig={{ local_kubeconfig }} apply --kustomize={{ repo_abs_path.stdout }}/cluster/bootstrap"
      delegate_to: localhost
      become: false

    - name: Check for Flux
      shell: "kubectl --kubeconfig={{ local_kubeconfig }} get crd kustomizations.kustomize.toolkit.fluxcd.io"
      delegate_to: localhost
      become: false
      retries: 6
      delay: 10
      register: result
      until: result.rc == 0

    - name: Bootstrap cluster
      shell: "kubectl --kubeconfig={{ local_kubeconfig }} apply --kustomize={{ repo_abs_path.stdout }}/cluster/flux/config"
      delegate_to: localhost
      become: false
