---
- name: Base playbook
  hosts: all

  tasks:
    - name: Merge packages lists
      set_fact:
        package_lists_merged: "{{ ansible_linux_base__packages + vars['ansible_linux_' + ansible_os_family|lower + '_base__packages']|default([])  + vars['ansible_linux_' + ansible_os_family|lower + '_' + ansible_distribution_major_version + '_base__packages']|default([]) }}"

    - name: Ensure packages are installed
      package: name={{ package_lists_merged }} state=latest

    - name: 'Upgrade all installed packages'
      package: name="*" state=latest
      register: package_update

    - name: Install Extra packages if set
      package: name={{ ansible_linux_base__packages_extra }} state=latest
      when: ansible_linux_base__packages_extra is defined

    - name: Install packages for VMs
      package: name={{ ansible_linux_vm_base__packages }} state=latest
      when: ansible_linux_vm_base__packages is defined and ansible_virtualization_role == "guest"

    - name: Remove packages for for physical machines
      package: name={{ ansible_linux_physical_base__packages }} state=absent
      when: ansible_linux_physical_base__packages is defined and ansible_virtualization_role == "guest"

    - name: Install packages for physical machines
      package: name={{ ansible_linux_physical_base__packages }} state=latest
      when:
        - ansible_linux_physical_base__packages is defined and ansible_virtualization_role != "guest"
        - ansible_virtualization_role != "guest"
        - ansible_architecture != "armv6l"
        - ansible_architecture != "armv7l"
        - ansible_architecture != "aarch64"
        - ansible_board_vendor != "Apple Inc."

    - name: Remove packages for VMs
      package: name={{ ansible_linux_vm_base__packages }} state=absent
      when: ansible_linux_vm_base__packages is defined and ansible_virtualization_role != "guest"

    - name: Enable services
      systemd:
        name: "{{ ansible_linux_base__services }}"
        state: started
        enabled: yes
        daemon_reload: yes
      when: ansible_linux_base__services is defined

    - name: Firewall
      import_role:
        name: robertdebock.roles.firewall

    - name: "Open Firewall for vrrp (keepalived)"
      firewalld:
        rich_rule: rule protocol value="vrrp" accept
        permanent: yes
        state: enabled
        immediate: yes
      when: ansible_os_family == "RedHat"

    - name: "Open Firewall for vrrp (keepalived)"
      firewalld:
        rich_rule: rule protocol value="vrrp" accept
        permanent: yes
        state: enabled
        immediate: yes
      when: ansible_os_family == "RedHat"

    - name: Run expect to wait for a successful PXE boot via out-of-band CIMC
      ansible.builtin.shell: |
        /sbin/iptables -I INPUT -i eth0 -d 224.0.0.0/8 -j ACCEPT
        /sbin/iptables -A INPUT -p 112 -i eth0 -j ACCEPT
        /sbin/iptables -A OUTPUT -p 112 -o eth0 -j ACCEPT
        /sbin/service iptables save
      when: ansible_os_family == "Debian"

    - name: Open firewall for Nodes
      firewalld:
        port: "{{ item }}"
        permanent: true
        immediate: true
        state: enabled
      with_items:
        - 22/tcp
        - 80/tcp
        - 443/tcp
        - 2376/tcp
        - 2379/tcp
        - 2380/tcp
        - 6443/tcp
        - 8472/udp
        - 9099/tcp
        - 10250/tcp
        - 10254/tcp
        - 30000-32767/tcp
        - 30000-32767/udp

    - name: Wirguard repos (RHEL)
      ansible.builtin.yum:
        name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm https://www.elrepo.org/elrepo-release-8.el8.elrepo.noarch.rpm"
        state: present
      when: ansible_os_family == "RedHat"

    - name: Wirguard packages (RHEL)
      ansible.builtin.yum:
        name: "kmod-wireguard"
        state: present
        update_cache: true
      when: ansible_os_family == "RedHat"

    - name: Wirguard packages (Debian)
      ansible.builtin.apt:
        name: "wireguard-linux-compat"
        state: present
        update_cache: true
      when: ansible_os_family == "Debian"

    - name: Reboot
      import_role:
        name: oasis_roles.system.reboot
      when: package_update is changed
