global
    log /dev/log  local0 warning
    #chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon
    ssl-load-extra-files key

defaults
  log global
  #option  dontlognull
  timeout connect 5000
  timeout client 50000
  timeout server 50000

frontend stats
   bind *:1936
   mode http
   option http-use-htx
   http-request use-service prometheus-exporter if { path /metrics }
   stats enable
   stats uri /stats
   stats refresh 10s

frontend http
  bind *:80
  mode tcp
  option tcplog
  default_backend http

backend http
    mode tcp
    option tcplog
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
    server node-1 k3s-node1:80 check
    server node-2 k3s-node2:80 check
    server node-3 k3s-node3:80 check

frontend https
  bind *:443
  mode tcp
  option tcplog
  default_backend https

backend https
    mode tcp
    option tcplog
    option tcp-check
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100
    server node-1 k3s-node1:443 check
    server node-2 k3s-node2:443 check
    server node-3 k3s-node3:443 check

frontend kube-apiserver
  bind *:6443
  mode tcp
  option tcplog
  default_backend kube-apiserver

backend kube-apiserver
    option  httpchk GET /readyz HTTP/1.0
    option  log-health-checks
    http-check expect rstatus 2[0-9][0-9]
    mode tcp
    balance roundrobin
    default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100 check-ssl verify required ca-file /etc/haproxy/k3s.ca
    server node-1 k3s-node1:6443 check crt /etc/haproxy/k3s-client.crt
    server node-2 k3s-node2:6443 check crt /etc/haproxy/k3s-client.crt
    server node-3 k3s-node3:6443 check crt /etc/haproxy/k3s-client.crt
