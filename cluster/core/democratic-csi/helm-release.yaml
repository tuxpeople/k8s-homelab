# https://gist.github.com/admun/4372899f20421a947b7544e5fc9f9117
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: democratic-csi
  namespace: democratic-csi
spec:
  releaseName: democratic-csi
  chart:
    spec:
      # renovate: registryUrl=https://democratic-csi.github.io/charts
      chart: democratic-csi
      version: 0.8.3
      sourceRef:
        kind: HelmRepository
        name: democratic-csi
        namespace: flux-system
      interval: 5m
  interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  values:
    csiDriver:
      name: "org.democratic-csi.nfs-client"
    storageClasses:
    # changed the name from nfs-client, so it runs in parallel with nfs-client-provisioner
    - name: synology-nfs-client
      defaultClass: true
    # set to Retain, so PVC will be left alone on delete
      reclaimPolicy: Retain
      volumeBindingMode: Immediate
      allowVolumeExpansion: false
      parameters:
        fsType: nfs
    # use nfsvers=4, since my NAS support that
      mountOptions:
      - noatime
      - nfsvers=4
      secrets:
        provisioner-secret:
        controller-publish-secret:
        node-stage-secret:
        node-publish-secret:
        controller-expand-secret:
    volumeSnapshotClasses: []
    # only needs controller, and the csi node client daemonset
    controller:
      enabled: true
      externalResizer:
        enabled: false
      strategy: deployment
      hostNetwork: true
      hostIPC: true
    # for the controller, it manually mount from the remote NFS sevrer on start, so it can dynamically create PVC (the "crude" part)
      driver:
        securityContext:
          allowPrivilegeEscalation: true
          capabilities:
            add:
            - SYS_ADMIN
          privileged: true
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "mkdir -p /nfs-storage; mount <my NFS server>:/nfs-storage /nfs-storage"]
          preStop:
            exec:
              command: ["/bin/sh","-c","umount /nfs-storage"]
    # provide the config to controller how to map and setup a PVC
    driver:
      config:
        driver: nfs-client
        # <some random guid>
        instance_id: fdf93387-dc47-4668-8b8d-69a46aa0513e
        nfs:
          shareHost: 10.20.30.40
          shareBasePath: "/volume1/Kubernetes"
          controllerBasePath: "/volume1/Kubernetes"
    # allow control to PVC creation user and permission
          dirPermissionsMode: "0700"
          dirPermissionsUser: 1000
          dirPermissionsGroup: 1000
