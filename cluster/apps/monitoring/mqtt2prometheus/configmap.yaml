---
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-file
data:
  config.yaml: |
    mqtt:
      # The MQTT broker to connect to
      server: tcp://raspberrypi:1883
      # Optional: Username and Password for authenticating with the MQTT Server
      # user: bob
      # password: happylittleclouds
      # Optional: for TLS client certificates
      # ca_cert: certs/AmazonRootCA1.pem
      # client_cert: certs/xxxxx-certificate.pem.crt
      # client_key: certs/xxxxx-private.pem.key
      # Optional: Used to specify ClientID. The default is <hostname>-<pid>
      # client_id: somedevice
      # The Topic path to subscribe to. Be aware that you have to specify the wildcard.
      topic_path: devices/home/#
      # Optional: Regular expression to extract the device ID from the topic path. The default regular expression, assumes
      # that the last "element" of the topic_path is the device id.
      # The regular expression must contain a named capture group with the name deviceid
      # For example the expression for tasamota based sensors is "tele/(?P<deviceid>.*)/.*"
      device_id_regex: "(.*/)?(?P<deviceid>.*)"
      # The MQTT QoS level
      qos: 0
    cache:
      # Timeout. Each received metric will be presented for this time if no update is send via MQTT.
      # Set the timeout to -1 to disable the deletion of metrics from the cache. The exporter presents the ingest timestamp
      # to prometheus.
      timeout: 24h
    json_parsing:
      # Separator. Used to split path to elements when accessing json fields.
      # You can access json fields with dots in it. F.E. {"key.name": {"nested": "value"}}
      # Just set separator to -> and use key.name->nested as mqtt_name
      separator: .
