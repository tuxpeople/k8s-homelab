---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: sharry
  namespace: utils
spec:
  chart:
    spec:
      chart: sharry
      version: 5.3.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m
  interval: 5m
  test:
    enable: false # Enable helm test
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    remediation:
      retries: 3
  rollback:
    timeout: 10m
    cleanupOnFail: true
    recreate: true
  values:
    service:
      main:
        ports:
          http:
            port: 9090
    strategy:
      type: Recreate
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_TARGET_SKY}"
          hajimari.io/enable: "true"
          hajimari.io/icon: "share-variant"
        hosts:
          - host: "share.${SECRET_DOMAIN_ME}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: "${SECRET_DOMAIN_ME/./-}-tls"
            hosts:
              - "share.${SECRET_DOMAIN_ME}"
    config: |
      sharry.restserver {
        # base-url = "https://share.${SECRET_DOMAIN_ME}"
        bind {
          address = "0.0.0.0"
          port = {{ .Values.service.main.ports.http.port }}
        }
        backend {
          signup {
            mode = "closed"
          }
          auth {
            fixed {
              enabled = false  # set to true to enable this auth provider
              user = "admin"
              password = "admin"
              order = 10
            }
            oauth = [
                {
                  enabled = true
                  id = "internal"
                  name = "Internal"
                  icon = "fas fa-address-book"
                  authorize-url = "https://sso.${SECRET_DOMAIN_ME}/auth/ldap/protocol/openid-connect/auth"
                  token-url = "https://sso.${SECRET_DOMAIN_ME}/auth/ldap/protocol/openid-connect/token"
                  user-url = "https://sso.${SECRET_DOMAIN_ME}/auth/ldap/protocol/openid-connect/userinfo"
                  user-id-key = "login"
                  client-id = "${SECRET_OIDC_CLIENT_ID}"
                  client-secret = "${SECRET_OIDC_CLIENT_SECRET}"
                }
            ]
          }
        }
      }
