---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: semaphore
  name: semaphore
  namespace: development
spec:
  replicas: 1
  selector:
    matchLabels:
      app: semaphore
  template:
    metadata:
      labels:
        app: semaphore
    spec:
      # Allow non-root user to access PersistentVolume
      securityContext:
        fsGroup: 1000
      containers:
        - image: ansiblesemaphore/semaphore:v2.8.50
          imagePullPolicy: Always
          env:
            - name: "SEMAPHORE_DB_USER"
              value: "root"
            - name: "SEMAPHORE_DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: ansible-semaphore-secret
                  key: mariadb-root-password
            - name: "SEMAPHORE_DB_HOST"
              value: "mariadb"
            - name: "SEMAPHORE_DB_PORT"
              value: "3306"
            - name: "SEMAPHORE_DB"
              value: "semaphore"
            - name: "SEMAPHORE_PLAYBOOK_PATH"
              value: "/tmp/semaphore/"
            - name: "SEMAPHORE_ADMIN_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: ansible-semaphore-secret
                  key: semaphore-admin-password
            - name: "SEMAPHORE_ADMIN_NAME"
              value: "admin"
            - name: "SEMAPHORE_ADMIN_EMAIL"
              value: "${SECRET_EMAIL}"
            - name: "SEMAPHORE_ADMIN"
              value: "admin"
          name: semaphore
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/semaphore
              name: semaphore-etc
            - mountPath: /tmp
              name: tmp
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
            limits:
              cpu: 500m
              memory: 200Mi
      volumes:
        - name: semaphore-etc
          persistentVolumeClaim:
            claimName: semaphore-data-pvc
        - name: tmp
          emptyDir:
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: semaphore
  name: semaphore-svc
  namespace: development
spec:
  ports:
    - name: http
      port: 3000
      protocol: TCP
      targetPort: 3000
  selector:
    app: semaphore
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_TARGET_SKY}"
    external-dns/is-public: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
  labels:
    app: semaphore
  name: semaphore-ingress
  namespace: development
spec:
  rules:
    - host: semaphore.${SECRET_DOMAIN_ME}
      http:
        paths:
          - backend:
              service:
                name: semaphore-svc
                port:
                  number: 3000
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - semaphore.${SECRET_DOMAIN_ME}
      secretName: "${SECRET_DOMAIN_ME/./-}-tls"
