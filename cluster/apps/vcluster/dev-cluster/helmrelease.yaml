---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: dev-cluster
spec:
  interval: 15m
  timeout: 10m
  chart:
    spec:
      chart: vcluster
      version: 0.14.0
      sourceRef:
        kind: HelmRepository
        name: loft-charts
        namespace: flux-system
  test:
    enable: false # Enable helm test
  install:
    createNamespace: true
    crds: CreateReplace
    remediation:
      retries: 5
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 5
  rollback:
    timeout: 10m
    cleanupOnFail: true
    recreate: true
  values:
    vcluster:
      image: rancher/k3s:v1.26.0-k3s1
      command:
        - /bin/k3s
      baseArgs:
        - server
        - --write-kubeconfig=/data/k3s-config/kube-config.yaml
        - --data-dir=/data
        - --disable=traefik,servicelb,metrics-server,local-storage,coredns
        - --disable-network-policy
        - --disable-agent
        - --disable-cloud-controller
        - --flannel-backend=none
      extraArgs: []
      volumeMounts:
        - mountPath: /data
          name: data
      env: []
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: 200m
          memory: 256Mi

    sync:
      nodes:
        enabled: true
        syncAllNodes: true

    # Enable HA mode
    enableHA: true
    # Scale up syncer replicas
    syncer:
      replicas: 3
      extraArgs:
        - --tls-san=dev-cluster.${SECRET_DOMAIN_ME}
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 12345
        runAsNonRoot: true
        runAsUser: 12345
        seccompProfile:
          type: RuntimeDefault

    # Scale up etcd
    etcd:
      replicas: 3
      fsGroup: 12345
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 12345
        runAsNonRoot: true
        runAsUser: 12345
        seccompProfile:
          type: RuntimeDefault

    # Scale up controller manager
    controller:
      replicas: 3
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 12345
        runAsNonRoot: true
        runAsUser: 12345
        seccompProfile:
          type: RuntimeDefault

    # Scale up api server
    api:
      replicas: 3
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 12345
        runAsNonRoot: true
        runAsUser: 12345
        seccompProfile:
          type: RuntimeDefault

    # Scale up DNS server
    coredns:
      replicas: 3
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 12345
        runAsNonRoot: true
        runAsUser: 12345
        seccompProfile:
          type: RuntimeDefault

    isolation:
      enabled: true

      podSecurityStandard: baseline

      resourceQuota:
        enabled: true
        quota:
          requests.cpu: 10
          requests.memory: 20Gi
          requests.storage: "100Gi"
          requests.ephemeral-storage: 60Gi
          limits.cpu: 20
          limits.memory: 40Gi
          limits.ephemeral-storage: 160Gi
          services.nodeports: 20
          services.loadbalancers: 20
          count/endpoints: 40
          count/pods: 20
          count/services: 20
          count/secrets: 100
          count/configmaps: 100
          count/persistentvolumeclaims: 20
        scopeSelector:
          matchExpressions:
        scopes:

      limitRange:
        enabled: true
        default:
          ephemeral-storage: 8Gi
          memory: 512Mi
          cpu: "1"
        defaultRequest:
          ephemeral-storage: 3Gi
          memory: 128Mi
          cpu: 100m

      networkPolicy:
        enabled: true
        outgoingConnections:
          ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 100.64.0.0/10
              - 127.0.0.0/8
              - 10.0.0.0/8
              - 172.16.0.0/12
              - 192.168.0.0/16

    ingress:
      enabled: true
      host: dev-cluster.${SECRET_DOMAIN_ME}
      annotations:
        kubernetes.io/ingress.class: traefik
        traefik.ingress.kubernetes.io/router.tls: "true"
        external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_TARGET_SKY}"
        hajimari.io/enable: "true"

    # securityContext:
    #   runAsUser: 12345
    #   runAsNonRoot: true
