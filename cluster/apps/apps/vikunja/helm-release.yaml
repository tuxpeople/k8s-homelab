---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vikunja
  namespace: apps
spec:
  releaseName: vikunja
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts
      chart: vikunja
      version: 5.1.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home
        namespace: flux-system
      interval: 5m
  interval: 5m
  test:
    enable: false # Enable helm test
  install:
    remediation: # perform remediation when helm install fails
      retries: 5
  upgrade:
    remediation: # perform remediation when helm upgrade fails
      retries: 3
      remediateLastFailure: true # remediate the last failure, when no retries remain
    cleanupOnFail: true
  rollback:
    timeout: 10m
    cleanupOnFail: true
    recreate: true
  values:
    env:
      TZ: "Europe/Zurich"
    persistence:
      files:
        enabled: true
        accessMode: ReadWriteOnce
        size: 5G
      config:
        enabled: true
        type: custom
        readOnly: true
        mountPath: "-"
        volumeSpec:
          configMap:
            name: vikunja-config-yml
    image:
      pullPolicy: Always
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: traefik
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: "${SECRET_DOMAIN_TARGET_SKY}"
          hajimari.io/enable: "true"
          hajimari.io/icon: "format-list-checks"
        hosts:
          - host: "todo.${SECRET_DOMAIN_ME}"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - "todo.${SECRET_DOMAIN_ME}"
            secretName: "todo.${SECRET_DOMAIN_ME/./-}-tls"
    resources:
      requests:
        cpu: 100m
        memory: 128M
    controllerType: deployment
    strategy:
      type: Recreate
    service:
      main:
        port:
          port: 8080
        annotations:
          prometheus.io/probe: "true"
          prometheus.io/protocol: http
    caddy:
      notls: true
    additionalContainers:
      - name: api
        image: vikunja/api:latest
        env:
          - name: VIKUNJA_DATABASE_TYPE
            value: "postgres"
          - name: VIKUNJA_SERVICE_JWTSECRET
            value: ${SECRET_VIKUNJA_JWT_SECRET}
          - name: VIKUNJA_DATABASE_HOST
            value: vikunja-postgresql
          - name: VIKUNJA_DATABASE_DATABASE
            value: vikunja
          - name: VIKUNJA_DATABASE_USER
            value: vikunja
          - name: VIKUNJA_DATABASE_PASSWORD
            value: ${SECRET_VIKUNJA_POSTGRES_PASSWORD}
          - name: VIKUNJA_SERVICE_FRONTENDURL
            value: https://todo.${SECRET_DOMAIN_ME}
          - name: VIKUNJA_MAILER_FROMEMAIL
            value: todo@${SECRET_DOMAIN_ME}
          - name: VIKUNJA_MAILER_ENABLED
            value: "true"
          - name: VIKUNJA_MAILER_HOST
            value: smtp.utils.svc.cluster.local
          - name: VIKUNJA_MAILER_PORT
            value: "25"
        volumeMounts:
          - name: files
            mountPath: /app/vikunja/files
          - name: config
            mountPath: /app/vikunja/config.yml
            subPath: config.yml
            readOnly: true
      - name: frontend
        image: vikunja/frontend:latest
        env:
          - name: VIKUNJA_API_URL
            value: "https://todo.${SECRET_DOMAIN_ME}/api/v1"
    postgresql:
      postgresqlPostgresPassword: ${SECRET_VIKUNJA_POSTGRES_ADMIN_PASSWORD}
      postgresqlUsername: vikunja
      postgresqlPassword: ${SECRET_VIKUNJA_POSTGRES_PASSWORD}
      postgresqlDatabase: vikunja
      enabled: true
      persistence:
        enabled: true
