---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nzbget
  labels:
    app.kubernetes.io/name: nzbget
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: nzbget
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nzbget
    spec:
      containers:
        - name: nzbget
          image: "linuxserver/nzbget:latest"
          imagePullPolicy: Always
          env:
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: TZ
              value: "Europe/Zurich"
          ports:
            - name: http
              containerPort: 6789
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Authorization
                  value: Basic bnpiZ2V0OnRlZ2J6bjY3ODk=
            initialDelaySeconds: 60
            failureThreshold: 6
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Authorization
                  value: Basic bnpiZ2V0OnRlZ2J6bjY3ODk=
            initialDelaySeconds: 20
            failureThreshold: 3
            timeoutSeconds: 1
          volumeMounts:
            - mountPath: /config
              name: config
            - mountPath: /downloads
              name: downloads
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 10m
              memory: 50Mi
      volumes:
        - name: config
          persistentVolumeClaim:
            claimName: nzbget-config
        - name: downloads
          persistentVolumeClaim:
            claimName: nfs-nzbget-downloads
