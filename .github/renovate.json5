{
  "enabled": true,
  "timezone": "Europe/Zurich",
  "semanticCommits": "enabled",
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "commitBody": "Signed-off-by: Thomas Deutsch <tuxpeople@users.noreply.github.com>",
  "assignees": ["@tuxpeople"],
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "schedule": ["every weekend"],
  "pre-commit": {
    "enabled": true
  },
  "flux": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$",
      "provision/ansible/.+\\.ya?ml.j2$"
    ]
  },
  "regexManagers": [
    // Read and process GitHub Releases
    {
      "fileMatch": [
        "cluster/.+\\.ya?ml$",
        "provision/ansible/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>.*?)( versioning=(?<versioning>.*?))?\n *url: https:\/\/github\\.com\/(?<depName>.*?)\\.git\n *ref:\n *tag: (?<currentValue>.*)\n",
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\n.*?_version: \"(?<currentValue>.*)\"\n",
        "datasource=(?<datasource>.*?) depName=(?<depName>.*?)( versioning=(?<versioning>.*?))?\n.*?_VERSION=\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    // regexManager to read and process cert-manager CRD's
    {
      "fileMatch": [
        "cluster/flux/config/cluster-prereqs/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/",
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n",
        "datasource=(?<datasource>.*) depName=(?<depName>.*)\\s.*\\/(?<currentValue>.*?)\\/",
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n"
      ]
    },
    // Generic Flux Regex Manager
    {
      "fileMatch": [
        "clusters/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "# renovate: datasource=(?<datasource>.*?) depName=(?<depName>.*?)( registryUrl=(?<registryUrl>.*?))?( versioning=(?<versioning>.*=?))?\n *tag: (?<currentValue>.*=?)"
      ],
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}",
      "registryUrlTemplate": "{{#if registryUrl}}{{{registryUrl}}}{{else}}{{/if}}"
    }
  ],
  "packageRules": [
    {
      "description": "Disable kubernetes-api",
      "matchManagers": ["kubernetes"],
      "matchDatasources": ["kubernetes-api"],
      "enabled": false
    },
    // setup datasources
    {
      "matchDatasources": ["helm"],
      "separateMinorPatch": true,
      "ignoreDeprecated": true
    },
    // global docker datasource settings
    {
      "matchDatasources": ["docker"],
      "enabled": true,
      "commitMessageTopic": "container image {{depName}}",
      "commitMessageExtra": "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}",
      "matchUpdateTypes": ["major", "minor", "patch"]
    },
    // add labels according to package and update types
    {
      "matchUpdateTypes": ["major"],
      "labels": ["type/major"]
     },
     {
      "matchUpdateTypes": ["minor"],
      "labels": ["type/minor"]
     },
     {
      "matchUpdateTypes": ["patch"],
      "labels": ["type/patch"]
     },
     {
      "matchDatasources": ["docker"],
      "addLabels": ["component/container"]
     },
     {
      "matchDatasources": ["helm"],
      "addLabels": ["component/helm"]
     },
     {
      "matchDatasources": ["galaxy"],
      "addLabels": ["component/ansible"]
     },
     {
      "matchDatasources": ["terraform-provider"],
      "addLabels": ["component/terraform"]
     },
    {
      "matchDatasources": ["github-releases", "docker"],
      "matchPackagePatterns": [
        "external-snapshotter",
        "snapshot-controller"
      ],
      "groupName": "external-snapshotter-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    }
  ]
}
