{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:base",
    "docker:enableMajor",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergePr",
    ":automergeMinor",
    ":automergeLinters",
    ":automergeRequireAllStatusChecks",
    // "github>tuxpeople/k8s-homelab//.github/renovate/autoMerge.json5",
    "github>tuxpeople/k8s-homelab//.github/renovate/commitMessage.json5",
    "github>tuxpeople/k8s-homelab//.github/renovate/groups.json5",
    "github>tuxpeople/k8s-homelab//.github/renovate/labels.json5",
    "github>tuxpeople/k8s-homelab//.github/renovate/semanticCommits.json5",
    "helpers:pinGitHubActionDigests",
    "github>bjw-s/home-ops//.github/renovate/grafanaDashboards.json5"
  ],
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "schedule": ["every weekend"],
  "pre-commit": {
    "enabled": true
  },
  "flux": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$"]
  },
  "helm-values": {
    "fileMatch": ["kubernetes/.+\\.ya?ml$"]
  },
  "kubernetes": {
    "fileMatch": [
      "ansible/.+\\.ya?ml(\\.j2)?$",
      "kubernetes/.+\\.ya?ml$"
    ]
  },
  "regexManagers": [
    {
      "description": "Process various other dependencies",
      "fileMatch": [
        "ansible/.+\\.ya?ml(\\.j2)?$",
        "kubernetes/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( registryUrl=(?<registryUrl>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}"
    },
    {
      "description": "Process k3s and similiar dependencies",
      "fileMatch": [
        "ansible/.+\\.ya?ml(\\.j2)?$",
        "kubernetes/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( registryUrl=(?<registryUrl>\\S+))?\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}"
    }
  ],
  "packageRules": [
    {
      "packagePatterns": ["^ghcr.io\\/linuxserver\\/"],
      "versionScheme": "regex:^(?<major>v?\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)*$"
    }
  ]
}
