
{
  extends: [
    ":enableRenovate",
    "config:base",
    ":disableRateLimiting",
    ":dependencyDashboard",
    ":semanticCommits",
    ":enablePreCommit",
    ":automergeDigest",
    ":automergeBranch",
    ":separatePatchReleases",
    "docker:enableMajor",
    "github>tuxpeople/k8s-homelab//.github/renovate/autoMerge.json5",
    "github>tuxpeople/k8s-homelab//.github/renovate/labels.json5",
    "github>tuxpeople/k8s-homelab//.github/renovate/disabledDatasources.json5",
    "github>tuxpeople/k8s-homelab//.github/renovate/commitMessage.json5",
    "github>tuxpeople/k8s-homelab//.github/renovate/groups.json5",
    "github>tuxpeople/k8s-homelab//.github/renovate/semanticCommits.json5",
    "helpers:pinGitHubActionDigests",
    "docker:pinDigests"
  ],
  "timezone": "Europe/Zurich",
  "dependencyDashboardTitle": "Renovate Dashboard ðŸ¤–",
  "commitBody": "Signed-off-by: Thomas Deutsch <tuxpeople@users.noreply.github.com>",
  "assignees": ["@tuxpeople"],
  "suppressNotifications": ["prIgnoreNotification"],
  "rebaseWhen": "conflicted",
  "schedule": ["every weekend"],

  "flux": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "helm-values": {
    "fileMatch": ["cluster/.+\\.ya?ml$"]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.ya?ml$",
      "provision/ansible/.+\\.ya?ml.j2$"
    ]
  },
  "regexManagers": [
    {
      "description": "Process various dependencies",
      "fileMatch": [
        "cluster/.+\\.ya?ml$",
        "hack/.+\\.sh$"
      ],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) depName=(?<depName>\\S+)( versioning=(?<versioning>\\S+))?\n.*?\"(?<currentValue>.*)\"\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}github-releases{{/if}}",
      "versioningTemplate": "{{#if versioning}}{{{versioning}}}{{else}}semver{{/if}}"
    },
    // regexManager to read and process Traefik CRD's
    {
      "description": "Process GitRepository CRD dependencies - Chart and Github Release are the same version",
      "fileMatch": [
        "cluster/crds/traefik/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "description": "Process CRD dependencies",
      "fileMatch": [
        "cluster/crds/cert-manager/.+\\.ya?ml$"
      ],
      "matchStrings": [
        // GitRepository and Flux Kustomization where 'Git tag' matches 'Helm' version
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n",
        // Kustomization where 'GitHub release artifact' matches 'Docker image' version
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n"
      ],
      "datasourceTemplate": "{{#if datasource}}{{{datasource}}}{{else}}helm{{/if}}"
    },
    {
      "description": "Process GitRepository CRD dependencies - Chart and Github Release are the same version",
      "fileMatch": [
        "cluster/crds/external-snapshotter/.+\\.ya?ml$",
        "cluster/crds/kube-prometheus-stack/.+\\.ya?ml$",
        "cluster/crds/kyverno/.+\\.ya?ml$",
        "cluster/crds/rook-ceph/.+\\.ya?ml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>\\S+) chart=(?<depName>\\S+)\n.*?(?<currentValue>[^-\\s]*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "description": "Process Kustomization CRD dependencies - Image and Github Release are the same version",
      "fileMatch": ["cluster/crds/.+\\.ya?ml$"],
      "matchStrings": [
        "datasource=(?<datasource>\\S+) image=(?<depName>\\S+)\n.*?-\\s(.*?)\/(?<currentValue>[^/]+)\/[^/]+\n"
      ],
      "datasourceTemplate": "docker"
    }
  ],
  "packageRules": [
    {
      "description": "Disable kubernetes-api",
      "matchManagers": ["kubernetes"],
      "matchDatasources": ["kubernetes-api"],
      "enabled": false
    },
    // setup datasources
    {
      "matchDatasources": ["helm"],
      "separateMinorPatch": true,
      "ignoreDeprecated": true
    },
    // global docker datasource settings
    {
      "matchDatasources": ["docker"],
      "enabled": true,
      "commitMessageTopic": "container image {{depName}}",
      "commitMessageExtra": "to {{#if isSingleVersion}}v{{{newVersion}}}{{else}}{{{newValue}}}{{/if}}",
      "matchUpdateTypes": ["major", "minor", "patch"]
    },
    // add labels according to package and update types
    {
      "matchDatasources": ["github-releases", "docker"],
      "matchPackagePatterns": [
        "external-snapshotter",
        "snapshot-controller"
      ],
      "groupName": "external-snapshotter-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    }
  ]
}
