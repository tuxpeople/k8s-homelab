---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Validation"

on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

jobs:
  pre-job:
    name: Validation Pre-Job
    runs-on: ubuntu-latest
    outputs:
      config_changed: ${{ steps.changed-files-config.outputs.any_changed }}
      templates_changed: ${{ steps.changed-files-templates.outputs.any_changed }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Get Changed Config Files
        id: changed-files-config
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files: |
            cluster.yaml
            nodes.yaml
            talos/talconfig.yaml
            talos/talenv.yaml
            makejinja.toml

      - name: Get Changed Template Files
        id: changed-files-templates
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c # v46.0.5
        with:
          files: templates/**

  validate-schemas:
    name: Validate Schemas
    needs: pre-job
    runs-on: ubuntu-latest
    if: ${{ needs.pre-job.outputs.config_changed == 'true' || needs.pre-job.outputs.templates_changed == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Cache mise tools
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.local/share/mise
          key: mise-${{ runner.os }}-${{ hashFiles('.mise.toml') }}

      - name: Setup mise
        uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac # v2.4.4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          cache: false

      - name: Validate configuration schemas
        run: task validate-schemas

  check-sops-encryption:
    name: Check SOPS Encryption
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check for unencrypted secrets
        run: |
          echo "üîç Checking for unencrypted secrets..."
          
          # Check for actual Secret resources (not just references)
          if find kubernetes/ -name "*.yaml" -not -name "*.sops.*" -exec grep -l "^kind: Secret" {} \; | grep -v "/tmp/"; then
            echo "‚ùå Found unencrypted Secret resources. All secrets should use .sops.yaml extension."
            exit 1
          fi
          
          # Check for common secret patterns (exclude references to secrets)
          echo "üîç Checking for potential hardcoded secrets..."
          potential_secrets=$(find kubernetes/ -name "*.yaml" -not -name "*.sops.*" -exec grep -l -E "(password|token|secret):\s*['\"]?[a-zA-Z0-9]{8,}" {} \; | grep -v -E "(externalsecret|secretstore|values\.yaml)" | head -5 || true)
          if [[ -n "$potential_secrets" ]]; then
            echo "‚ö†Ô∏è  Found potential hardcoded secrets that may need encryption:"
            echo "$potential_secrets"
            echo "Please review these files and encrypt any actual secrets."
          else
            echo "‚úÖ No potential hardcoded secrets found"
          fi
          
          # Verify SOPS encrypted files have ENC markers
          echo "üîç Checking SOPS encrypted files..."
          if invalid_sops=$(find kubernetes/ -name "*.sops.*" -exec grep -L "ENC\[AES256_GCM" {} \; 2>/dev/null | head -5); then
            if [[ -n "$invalid_sops" ]]; then
              echo "‚ùå Found .sops files without proper encryption markers:"
              echo "$invalid_sops"
              exit 1
            else
              echo "‚úÖ All .sops files are properly encrypted"
            fi
          fi
          
          echo "‚úÖ SOPS encryption check passed"

  validate-yaml:
    name: Validate YAML Syntax
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Cache mise tools
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.local/share/mise
          key: mise-${{ runner.os }}-${{ hashFiles('.mise.toml') }}

      - name: Setup mise
        uses: jdx/mise-action@c37c93293d6b742fc901e1406b8f764f6fb19dac # v2.4.4
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        with:
          cache: false

      - name: Validate YAML syntax
        run: |
          echo "üîç Validating YAML syntax..."
          find . -name "*.yaml" -o -name "*.yml" | while read -r file; do
            if [[ "$file" == *".sops."* ]]; then
              echo "‚è≠Ô∏è  Skipping encrypted file: $file"
              continue
            fi
            echo "‚úÖ Validating: $file"
            yq eval '.' "$file" > /dev/null || {
              echo "‚ùå Invalid YAML syntax in: $file"
              exit 1
            }
          done

  validation-status:
    name: Validation Success
    needs: ["validate-schemas", "check-sops-encryption", "validate-yaml"]
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Any jobs failed?
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

      - name: All jobs passed or skipped?
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: echo "‚úÖ All validation checks passed or skipped" && echo "${{ toJSON(needs.*.result) }}"