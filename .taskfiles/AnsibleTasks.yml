---
version: "3"

env:
  ANSIBLE_CONFIG: "{{.ROOT_DIR}}/ansible.cfg"
  K8S_AUTH_KUBECONFIG: "{{.ROOT_DIR}}/kubeconfig"

vars:
  ANSIBLE_PLAYBOOK_DIR: "{{.ANSIBLE_DIR}}/{{.cluster}}/playbooks"
  ANSIBLE_INVENTORY_DIR: "{{.ANSIBLE_DIR}}/{{.cluster}}/inventory"

tasks:
  init:
    desc: Install / Upgrade Ansible galaxy deps
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - pip3 install --user --requirement requirements.txt
      - ansible-galaxy install -r requirements.yml --roles-path ~/.ansible/roles --force
      - ansible-galaxy collection install -r requirements.yml --collections-path ~/.ansible/collections --force

  list:
    desc: List all the hosts
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --list-hosts

  fix-ssh:
    desc: List all the hosts
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --list-hosts | grep -v hosts | xargs -L1 fix-ssh-key
      - ansible-inventory -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --list | jq -r '._meta.hostvars[].ansible_host' | xargs -L1 fix-ssh-key

  prepare:
    desc: Prepare all the k8s nodes for running k3s
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-prepare.yml
      # - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/setup-nfs.yml
      # - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/filesystems.yml

  install:
    desc: Install Kubernetes on the nodes
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-installation.yml

  upgrade:
    desc: Upgrade Kubernetes on the nodes (currently this only upgrades kube-vip)
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-upgrade.yml

  nuke:
    desc: Uninstall Kubernetes on the nodes
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    interactive: true
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-nuke.yml
      - task: force-reboot

  ping:
    desc: Ping all the hosts
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -m 'ping'

  uptime:
    desc: Uptime of all the hosts
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - ansible all -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml --one-line -a 'uptime'

  force-reboot:
    desc: Reboot all the k8s nodes
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - ansible-playbook -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml {{.ANSIBLE_PLAYBOOK_DIR}}/cluster-reboot.yml

  force-poweroff:
    desc: Shutdown all the k8s nodes
    requires:
      vars: ["cluster"]
    summary: |
      Args:
        cluster: Cluster to run command against (required)
    dir: "{{.ANSIBLE_DIR}}/{{.cluster}}"
    cmds:
      - ansible kubernetes -i {{.ANSIBLE_INVENTORY_DIR}}/hosts.yml -a '/usr/bin/systemctl poweroff' --become
